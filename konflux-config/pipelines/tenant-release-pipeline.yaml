# konflux-config/pipelines/tenant-release-pipeline.yaml
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: kernel-module-tenant-release
spec:
  description: >-
    This pipeline releases the kernel module artifact by repackaging it
    from the build container and publishing it to external storage.
  params:
    - name: snapshot
      type: string
      description: The JSON representation of the Release Snapshot.
    # Add params for Git and S3 publishing
    - name: gitRepoURL
      type: string
      description: "Target Git repository URL for the artifact."
    - name: gitRepoTokenSecret
      type: string
      description: "Secret containing the Git repository token."
    - name: s3Endpoint
      type: string
      description: "The S3 endpoint URL."
    - name: s3Bucket
      type: string
      description: "The destination S3 bucket name."
    - name: s3CredentialsSecret
      type: string
      description: "Secret holding S3 credentials."

  tasks:
    # Task 1: Find the container image from the snapshot
    - name: get-image-url
      taskSpec:
        params:
          - name: snapshot
        results:
          - name: image-url
        steps:
          - name: get-image
            image: quay.io/konflux-ci/release-service-utils:0f82be4
            script: |
              #!/usr/bin/env sh
              # The snapshot contains a list of all components. We find ours by name.
              IMAGE_URL=$(echo "$(params.snapshot)" | jq -r '.components[] | select(.name == "kernel-module") | .containerImage')
              echo -n "$IMAGE_URL" | tee $(results.image-url.path)
      params:
        - name: snapshot
          value: $(params.snapshot)

    # Task 2: Repackage the .ko file from the container image
    - name: repack-kernel-module
      runAfter: ["get-image-url"]
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/HarelErlich/konflux-kernel-module-demo.git
          - name: revision
            value: main
          - name: pathInRepo
            value: tasks/repack-kernel-module.yaml
      params:
        - name: input-image
          value: $(tasks.get-image-url.results.image-url)

    # Task 3: Push the repackaged artifact to Git
    - name: push-to-git
      runAfter: ["repack-kernel-module"]
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/HarelErlich/konflux-kernel-module-demo.git
          - name: revision
            value: main
          - name: pathInRepo
            value: tasks/push-to-git.yaml
      params:
        - name: kmod-artifact
          value: $(tasks.repack-kernel-module.results.kmod-artifact)
        - name: gitRepoURL
          value: $(params.gitRepoURL)
        - name: gitRepoTokenSecret
          value: $(params.gitRepoTokenSecret)

    # Task 4: Push the repackaged artifact to S3
    - name: push-to-s3
      runAfter: ["repack-kernel-module"]
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/HarelErlich/konflux-kernel-module-demo.git
          - name: revision
            value: main
          - name: pathInRepo
            value: tasks/push-to-s3.yaml
      params:
        - name: kmod-artifact
          value: $(tasks.repack-kernel-module.results.kmod-artifact)
        - name: s3Endpoint
          value: $(params.s3Endpoint)
        - name: s3Bucket
          value: $(params.s3Bucket)
        - name: s3CredentialsSecret
          value: $(params.s3CredentialsSecret)