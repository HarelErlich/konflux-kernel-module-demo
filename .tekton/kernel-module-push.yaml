apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/HarelErlich/konflux-kernel-module-demo?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    # Run on push to main only
    pipelinesascode.tekton.dev/on-cel-expression: event == "push" && target_branch == "main"
  labels:
    appstudio.openshift.io/application: kernel-module-app
    appstudio.openshift.io/component: kernel-module
    pipelines.appstudio.openshift.io/type: build
  name: kernel-module-on-push
  namespace: rh-ee-herlich-tenant
spec:
  params:
    - name: git-url
      value: '{{source_url}}'
    - name: revision
      value: '{{revision}}'
    - name: output-image
      # Push built image to your Quay repo tagged by commit SHA
      value: quay.io/herlich/kernel-module:{{revision}}
    - name: dockerfile
      value: Dockerfile
    - name: path-context
      value: .
    # Disable optional checks/scans to avoid missing catalog tasks
    - name: skip-checks
      value: "true"
    # Leave hermetic/prefetch empty (non-hermetic build)
    - name: hermetic
      value: "false"
    - name: prefetch-input
      value: ""
    - name: image-expires-after
      value: ""  # no temporary expiration
    - name: build-source-image
      value: "false"
    - name: build-image-index
      value: "false"
    - name: build-args
      value: []
    - name: build-args-file
      value: ""
    - name: privileged-nested
      value: "false"
  # Keep it simple: clone -> build -> (optional) index
  pipelineSpec:
    description: |
      Minimal pipeline to build and push an image using buildah with Trusted Artifacts.
      Prefetch and security scan tasks are disabled for simplicity.
    params:
      - name: git-url
        type: string
        description: Source Repository URL
      - name: revision
        type: string
        description: Revision of the Source Repository
        default: ""
      - name: output-image
        type: string
        description: Fully Qualified Output Image
      - name: path-context
        type: string
        description: Build context path
        default: .
      - name: dockerfile
        type: string
        description: Path to the Dockerfile inside context
        default: Dockerfile
      - name: rebuild
        type: string
        description: Force rebuild image
        default: "false"
      - name: skip-checks
        type: string
        description: Skip checks against built image
        default: "true"
      - name: hermetic
        type: string
        description: Execute the build with network isolation
        default: "false"
      - name: prefetch-input
        type: string
        description: Build dependencies to be prefetched
        default: ""
      - name: image-expires-after
        type: string
        description: Optional temporary tag expiration window
        default: ""
      - name: build-source-image
        type: string
        description: Build a source image
        default: "false"
      - name: build-image-index
        type: string
        description: Add built image into an OCI image index
        default: "false"
      - name: build-args
        type: array
        description: Array of --build-arg values ("arg=value" strings) for buildah
        default: []
      - name: build-args-file
        type: string
        description: Path to a file with build arguments for buildah
        default: ""
      - name: privileged-nested
        type: string
        description: Enable privileged mode for remote VMs only
        default: "false"
    results:
      # Publish results from build-image-index if present, else from build step
      - name: IMAGE_URL
        description: Image URL
        value: $(tasks.build-image-index.results.IMAGE_URL)
      - name: IMAGE_DIGEST
        description: Image digest
        value: $(tasks.build-image-index.results.IMAGE_DIGEST)
      - name: CHAINS-GIT_URL
        value: $(tasks.clone-repository.results.url)
      - name: CHAINS-GIT_COMMIT
        value: $(tasks.clone-repository.results.commit)
    tasks:
      - name: init
        params:
          - name: image-url
            value: $(params.output-image)
          - name: rebuild
            value: $(params.rebuild)
          - name: skip-checks
            value: $(params.skip-checks)
        taskRef:
          resolver: bundles
          params:
            - name: name
              value: init
            - name: bundle
              value: quay.io/konflux-ci/tekton-catalog/task-init:0.2@sha256:ded314206f09712b2116deb050b774ae7efef9ab243794334c8e616871a3ffa5
            - name: kind
              value: task
      - name: clone-repository
        runAfter: [init]
        when:
          - input: $(tasks.init.results.build)
            operator: in
            values: ["true"]
        params:
          - name: url
            value: $(params.git-url)
          - name: revision
            value: $(params.revision)
          - name: ociStorage
            value: $(params.output-image).git
          - name: ociArtifactExpiresAfter
            value: $(params.image-expires-after)
        taskRef:
          resolver: bundles
          params:
            - name: name
              value: git-clone-oci-ta
            - name: bundle
              value: quay.io/konflux-ci/tekton-catalog/task-git-clone-oci-ta:0.1@sha256:4a601aeec58a1dd89c271e728fd8f0d84777825b46940c3aec27f15bab3edacf
            - name: kind
              value: task
        workspaces:
          - name: basic-auth
            workspace: git-auth
      - name: build-container
        runAfter: [clone-repository]
        when:
          - input: $(tasks.init.results.build)
            operator: in
            values: ["true"]
        params:
          - name: IMAGE
            value: $(params.output-image)
          - name: DOCKERFILE
            value: $(params.dockerfile)
          - name: CONTEXT
            value: $(params.path-context)
          - name: HERMETIC
            value: $(params.hermetic)
          - name: PREFETCH_INPUT
            value: $(params.prefetch-input)
          - name: IMAGE_EXPIRES_AFTER
            value: $(params.image-expires-after)
          - name: COMMIT_SHA
            value: $(tasks.clone-repository.results.commit)
          - name: BUILD_ARGS
            value:
              - $(params.build-args[*])
          - name: BUILD_ARGS_FILE
            value: $(params.build-args-file)
          - name: PRIVILEGED_NESTED
            value: $(params.privileged-nested)
          # Use source directly from clone (no prefetch)
          - name: SOURCE_ARTIFACT
            value: $(tasks.clone-repository.results.SOURCE_ARTIFACT)
          - name: CACHI2_ARTIFACT
            value: ""
        taskRef:
          resolver: bundles
          params:
            - name: name
              value: buildah-oci-ta
            - name: bundle
              value: quay.io/konflux-ci/tekton-catalog/task-buildah-oci-ta:0.4@sha256:c9ef8d723f5c3d65ec910d6fdb74607332620289ab083d6c97c602226fe7a8d2
            - name: kind
              value: task
      - name: build-image-index
        runAfter: [build-container]
        when:
          - input: $(tasks.init.results.build)
            operator: in
            values: ["true"]
        params:
          - name: IMAGE
            value: $(params.output-image)
          - name: COMMIT_SHA
            value: $(tasks.clone-repository.results.commit)
          - name: IMAGE_EXPIRES_AFTER
            value: $(params.image-expires-after)
          - name: ALWAYS_BUILD_INDEX
            value: $(params.build-image-index)
          - name: IMAGES
            value:
              - $(tasks.build-container.results.IMAGE_URL)@$(tasks.build-container.results.IMAGE_DIGEST)
        taskRef:
          resolver: bundles
          params:
            - name: name
              value: build-image-index
            - name: bundle
              value: quay.io/konflux-ci/tekton-catalog/task-build-image-index:0.1@sha256:ba7fbed5c4862968c1a77d6b90d5bdd497925ab1de41b859c027dd5c3069cd3e
            - name: kind
              value: task
    workspaces:
      - name: git-auth
        optional: true
  taskRunTemplate:
    serviceAccountName: build-pipeline-kernel-module
  workspaces:
    - name: git-auth
      secret:
        secretName: '{{ git_auth_secret }}'