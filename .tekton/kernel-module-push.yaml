apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/HarelErlich/konflux-kernel-module-demo?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/cancel-in-progress: "false"
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "push" && target_branch
      == "main"
  labels:
    appstudio.openshift.io/application: kernel-module-app
    appstudio.openshift.io/component: kernel-module
    pipelines.appstudio.openshift.io/type: build
  name: kernel-module-on-push
  namespace: rh-ee-herlich-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/herlich/kernel-module:{{revision}}
  - name: dockerfile
    value: Dockerfile
  - name: path-context
    value: .
  - name: skip-checks
    value: "true"
  pipelineSpec:
    params:
    - name: git-url
      type: string
    - name: revision
      type: string
    - name: output-image
      type: string
    - name: path-context
      type: string
      default: .
    - name: dockerfile
      type: string
      default: Dockerfile
    - name: skip-checks
      type: string
      default: "false"
    results:
    - name: IMAGE_URL
      value: $(tasks.build-container.results.IMAGE_URL)
    - name: IMAGE_DIGEST
      value: $(tasks.build-container.results.IMAGE_DIGEST)
    - name: CHAINS-GIT_URL
      value: $(tasks.clone-repository.results.url)
    - name: CHAINS-GIT_COMMIT
      value: $(tasks.clone-repository.results.commit)
    tasks:
    - name: clone-repository
      params:
      - name: url
        value: $(params.git-url)
      - name: revision
        value: $(params.revision)
      taskRef:
        kind: Task
        name: git-clone
        resolver: bundles
        params:
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-git-clone:0.2
        - name: name
          value: git-clone
      workspaces:
      - name: output
        workspace: workspace
      - name: basic-auth
        workspace: git-auth
    - name: build-container
      runAfter:
      - clone-repository
      params:
      - name: IMAGE
        value: $(params.output-image)
      - name: DOCKERFILE
        value: $(params.dockerfile)
      - name: CONTEXT
        value: $(params.path-context)
      - name: COMMIT_SHA
        value: $(tasks.clone-repository.results.commit)
      taskRef:
        kind: Task
        name: buildah
        resolver: bundles
        params:
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-buildah:0.2
        - name: name
          value: buildah
      workspaces:
      - name: source
        workspace: workspace
    - name: clair-scan
      runAfter:
        - build-container
      when:
        - input: "$(params.skip-checks)"
          operator: in
          values: ["false"]
      params:
        - name: image-digest
          value: $(tasks.build-container.results.IMAGE_DIGEST)
        - name: image-url
          value: $(tasks.build-container.results.IMAGE_URL)
      taskRef:
        name: clair-scan
        kind: Task
        resolver: bundles
        params:
          - name: bundle
            value: quay.io/konflux-ci/tekton-catalog/task-clair-scan:0.3
          - name: name
            value: clair-scan
  taskRunTemplate:
    serviceAccountName: build-pipeline-kernel-module
  workspaces:
  - name: workspace
    volumeClaimTemplate:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'